<template>
  <view class="authorize-contianer">  
    <view class="authorize-icon"> 
     <image src="../images/bsk.jpg"/>
    </view> 
    <view class = "auth tc">
      <view class="item">纽扣图片汇总</view>    
      </view>
      <view class="btn-authorize">
      <button open-type="getUserInfo" lang="zh_CN" class="btnShallow" style="text-align:center;"  
      hover-class="btnDeeper" bindgetuserinfo="onGotUserInfo">微信登陆</button>  
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';   
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO, 
  USER_INFO,
  USER_UID,
  TOKEN
} from '@/utils/constant';
export default class Authorize extends wepy.page {
 
  config = {  
    navigationBarBackgroundColor: '#ff4e43',
    navigationBarTitleText: ""
  }
  data = {   
    OpenId:"",
    randStr:"",
    productId: ""
  }
 
  async base64_encode(str) { // 编码，配合encodeURIComponent使用 
    var c1, c2, c3;
    var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var i = 0, len = str.length, strin = '';
    while (i < len) {
        c1 = str.charCodeAt(i++) & 0xff; 
        if (i == len) {
            strin += base64EncodeChars.charAt(c1 >> 2);
            strin += base64EncodeChars.charAt((c1 & 0x3) << 4);
            strin += "==";
            break;
        }
        c2 = str.charCodeAt(i++);
        if (i == len) {
            strin += base64EncodeChars.charAt(c1 >> 2);
            strin += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
            strin += base64EncodeChars.charAt((c2 & 0xF) << 2);
            strin += "="; 
            break;
        }
        c3 = str.charCodeAt(i++);
        strin += base64EncodeChars.charAt(c1 >> 2);
        strin += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
        strin += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));
        strin += base64EncodeChars.charAt(c3 & 0x3F)
    }
     
    wepy.setStorageSync(TOKEN, strin);  
    return strin
  }

  async onLoad(option) {  
    if( option != undefined ) { 
    this.WhetherDetail = option.WhetherDetail;
    this.productId = option.id;
    }
    let res = await wepy.getSetting()                                 
    if ((res.authSetting)['scope.userInfo']) {
      let userInfo = wepy.getStorageSync(USER_INFO) 
      if (!userInfo.nickName) {
        let data  = await wepy.getUserInfo()
        if (data) {
          wepy.setStorageSync(USER_INFO, data.userInfo) 
        }
        let res = await wepy.login() 
        if (res.code) {
          let systemInfo = wepy.getSystemInfoSync();
          wepy.setStorageSync(SYSTEM_INFO, systemInfo); 
          let rlt = await api.wxJsCode2Session({
            query: {
              code: res.code, 
              method:"POST",
              nickName: e.detail.userInfo.nickName
            }
          })                         
          }
        }    
      }
      
    }
  
  async onGotUserInfo(e) { 
    if (e.detail.errMsg == 'getUserInfo:ok') {   
      let res = await wepy.login(); 
      if (res.code) { 
        wepy.setStorageSync(USER_INFO, e.detail.userInfo);  
        let systemInfo = wepy.getSystemInfoSync();
        wepy.setStorageSync(SYSTEM_INFO, systemInfo);
        
        // 获取用户openid
        let rlt = await api.wxJsCode2Session({
          query: {
            code: res.code,                                             
            method:"POST"
          } 
        }) 
        if(rlt.data.code == 200) {  
          this.OpenId = rlt.data.data.openid; 

        }

        // 存储数据入库用户信息
        let user_save = await api.addUser({
            query: {             
               method:"POST",
               avatar:e.detail.userInfo.avatarUrl,       
               name: e.detail.userInfo.nickName,
               gender: e.detail.userInfo.gender,    
               country: e.detail.userInfo.country,    
               province: e.detail.userInfo.province,    
               city: e.detail.userInfo.city,    
               openid:rlt.data.data.openid,  
               unionid:rlt.data.data.unionid
            }
          }); 

        if(rlt.data.code == 200) { 
          wepy.setStorageSync(USER_UID, user_save.data.data);  
          this.randStr = user_save.data.data.randstr; 

          // Base64加密
          var timestamp = Math.round(new Date().getTime()/1000).toString();  
          var str = this.OpenId+this.randStr;    
          this.base64_encode(encodeURIComponent(str));

        }

        let userUid = wepy.getStorageSync(USER_UID);             
        if (rlt.data) { 
          let data = rlt.data;                              
          if (data.data.openid) {   
            wepy.setStorageSync(USER_SPECICAL_INFO, data.data);
            let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO);   
              wepy.redirectTo({
                url: '/pages/home'
              })    
          }
        }  


      }
    }  

  }

  methods = { 
  }
  
  events = {

  }
}
</script>
<style lang="less">
page {
  height: 100%;                                      
}
  .authorize-contianer {
    height: 100%;
    background: #fff;
    text-align: center;        
    .authorize-icon {
      width: 100%;
      height: 650rpx; 
      display: block;
      overflow: hidden;
      image{width: 100%;height: 100%;}  
    }
    .auth {
      width:458rpx;
      line-height:67rpx;
      margin:127rpx auto 0; 
      .item{
        color: #333;
        font-size:46rpx;
        }
    }
    .btn-authorize {
      margin: 66rpx auto;
    }
    .btnShallow{
      width: 458rpx;
      height: 86rpx;
      line-height: 86rpx;
      color: #fff; 
      background:rgba(255,65,62,1);
      border-radius:10rpx; 
      font-size: 36rpx;
    }
  }

</style>
